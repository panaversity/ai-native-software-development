# Chapter Structure Template

# Detailed internal structure for a single chapter including sections,
# pedagogical features, examples, exercises, and flow

---

chapter_metadata:
  id: "ch-05"
  number: 5
  title: "Chapter Title"
  part: "Part II: Topic Area"
  estimated_pages: 25-30
  estimated_reading_time: "2-3 hours"

  purpose: "Core | Optional | Enhancement"
  chapter_type: "Conceptual | Practical | Mixed | Reference"

  dependencies:
    required: ["ch-03", "ch-04"]
    recommended: ["ch-02"]
    optional: []

  synopsis: |
    Brief 2-3 sentence description of what this chapter covers
    and why it matters for the reader's learning journey.

  learning_objectives:
    - id: "LO-05-01"
      statement: "Action verb + specific outcome"
      blooms_level: "Understand"
      context: "The situation where learner applies this"
      assessment_method: "How this will be assessed"

    - id: "LO-05-02"
      statement: "Second learning objective"
      blooms_level: "Apply"
      context: "Context for application"
      assessment_method: "Code exercise"

    - id: "LO-05-03"
      statement: "Third learning objective"
      blooms_level: "Analyze"
      context: "Analysis context"
      assessment_method: "Compare-and-contrast exercise"

  key_concepts:
    - name: "Concept 1"
      definition: "Brief definition"
      importance: "Why this concept matters"
      difficulty: "Easy | Medium | Hard"

    - name: "Concept 2"
      definition: "Brief definition"
      importance: "Why this matters"
      difficulty: "Medium"

    - name: "Concept 3"
      definition: "Brief definition"
      importance: "Why this matters"
      difficulty: "Hard"

---

# Chapter Internal Structure

structure_pattern: "IBS | MCA | Cookbook | EEE"
# Introduction-Body-Summary | Motivation-Concept-Application |
# Cookbook | Exploration-Experimentation-Explanation

sections:
  - id: "intro"
    title: "Introduction"
    section_number: null
    # No number for intro section
    estimated_pages: 2-3
    purpose: "Set expectations and motivation"

    contents:
      - type: "motivation"
        description: "Why this chapter matters"

      - type: "prerequisites_check"
        description: |
          Self-assessment checklist:
          Before starting, you should be able to:
          □ Prerequisite 1
          □ Prerequisite 2
          □ Prerequisite 3

      - type: "chapter_overview"
        description: "What we'll cover in this chapter"

      - type: "learning_outcomes"
        description: "By the end of this chapter, you will be able to..."

  - id: "section-01"
    title: "Section 1: Understanding Core Concept"
    section_number: "5.1"
    estimated_pages: 5-7
    purpose: "Introduce main concept"

    learning_flow: "Motivation → Explanation → Example → Practice"

    contents:
      - type: "concept_introduction"
        topic: "Main concept name"
        approach: "Start with problem/need"

      - type: "definition"
        content: "Formal definition of concept"

      - type: "explanation"
        details: "How it works, underlying principles"
        visual_aids: ["Diagram showing X", "Flowchart of Y"]

      - type: "code_example"
        example_id: "ex-5.1-basic"
        title: "Basic Example: Demonstrating Core Concept"
        code_type: "Simple | Intermediate | Advanced"
        annotations: true
        # Whether code has inline comments explaining

      - type: "callout"
        callout_type: "common_pitfall"
        content: "Watch out for X because Y"

      - type: "practice_exercise"
        exercise_id: "practice-5.1"
        difficulty: "Easy"
        type: "Code-writing"

  - id: "section-02"
    title: "Section 2: Practical Applications"
    section_number: "5.2"
    estimated_pages: 6-8
    purpose: "Show concept in realistic context"

    learning_flow: "Problem → Solution → Explanation → Variations"

    contents:
      - type: "real_world_problem"
        description: "Scenario where this concept solves a problem"

      - type: "code_example"
        example_id: "ex-5.2-practical"
        title: "Practical Example: Real-World Use Case"
        code_type: "Intermediate"
        annotations: true
        before_after: true
        # Show problem code and improved code

      - type: "explanation"
        details: "Why this solution works, benefits, tradeoffs"

      - type: "code_example"
        example_id: "ex-5.2-variation"
        title: "Variation: Alternative Approach"
        code_type: "Intermediate"
        annotations: true

      - type: "callout"
        callout_type: "best_practice"
        content: "When using this approach, always do X because Y"

      - type: "practice_exercise"
        exercise_id: "practice-5.2"
        difficulty: "Medium"
        type: "Extend-code"

  - id: "section-03"
    title: "Section 3: Advanced Techniques"
    section_number: "5.3"
    estimated_pages: 5-6
    purpose: "Deepen understanding with advanced usage"

    learning_flow: "Recap → Advanced Feature → Complex Example → Analysis"

    contents:
      - type: "recap"
        content: "What we know so far about this concept"

      - type: "concept_introduction"
        topic: "Advanced aspect of concept"
        approach: "Build on previous knowledge"

      - type: "code_example"
        example_id: "ex-5.3-advanced"
        title: "Advanced Example: Complex Use Case"
        code_type: "Advanced"
        annotations: true
        progressive_disclosure: true
        # Build up complexity in steps

      - type: "callout"
        callout_type: "advanced_topic"
        content: "For experts: Here's how this relates to X"

      - type: "practice_exercise"
        exercise_id: "practice-5.3"
        difficulty: "Hard"
        type: "Design-challenge"

  - id: "section-04"
    title: "Section 4: Common Patterns and Anti-Patterns"
    section_number: "5.4"
    estimated_pages: 4-5
    purpose: "Show dos and don'ts"

    learning_flow: "Pattern → Anti-Pattern → Comparison → Guidelines"

    contents:
      - type: "pattern_catalog"
        patterns:
          - name: "Pattern 1 Name"
            description: "When and how to use"
            code_example: "ex-5.4-pattern1"

          - name: "Pattern 2 Name"
            description: "When and how to use"
            code_example: "ex-5.4-pattern2"

      - type: "anti_pattern_catalog"
        anti_patterns:
          - name: "Anti-Pattern 1"
            description: "Why this is problematic"
            code_example: "ex-5.4-antipattern1"
            better_alternative: "ex-5.4-pattern1"

      - type: "callout"
        callout_type: "best_practice"
        content: "Summary of best practices for this concept"

  - id: "summary"
    title: "Summary"
    section_number: null
    estimated_pages: 2-3
    purpose: "Consolidate learning and look ahead"

    contents:
      - type: "key_takeaways"
        content: |
          Key Points:
          - Takeaway 1
          - Takeaway 2
          - Takeaway 3

      - type: "what_you_can_now_do"
        content: |
          After completing this chapter, you can:
          - Capability 1
          - Capability 2
          - Capability 3

      - type: "quick_reference"
        content: "Syntax summary, common patterns, cheat sheet"

      - type: "looking_ahead"
        content: "In the next chapter, we'll build on this by..."

  - id: "exercises"
    title: "Exercises"
    section_number: null
    estimated_pages: 3-4
    purpose: "Reinforce learning through practice"

    exercise_count: 8
    difficulty_distribution:
      easy: 3
      medium: 4
      hard: 1

    # Detailed exercises defined below

  - id: "further_reading"
    title: "Further Reading"
    section_number: null
    estimated_pages: 0.5
    purpose: "Point to additional resources"

    contents:
      - type: "resource_list"
        resources:
          - "PEP 8: Style Guide for Python Code"
          - "Chapter 8: Advanced OOP (in this book)"
          - "Real Python: Advanced Python Decorators"
          - "Python documentation: functools module"

---

# Pedagogical Features

code_examples:
  - id: "ex-5.1-basic"
    title: "Basic Example: First Steps"
    purpose: "Introduce syntax and basic usage"
    complexity: "Simple"
    lines_of_code: 10-15
    annotations: true
    runnable: true
    output_shown: true

  - id: "ex-5.2-practical"
    title: "Practical Example: Real Use Case"
    purpose: "Show realistic application"
    complexity: "Intermediate"
    lines_of_code: 25-35
    annotations: true
    runnable: true
    output_shown: true
    before_after_comparison: true

  - id: "ex-5.3-advanced"
    title: "Advanced Example: Complex Pattern"
    purpose: "Demonstrate sophisticated technique"
    complexity: "Advanced"
    lines_of_code: 40-60
    annotations: true
    runnable: true
    output_shown: true
    progressive_steps: 3

  - id: "ex-5.4-pattern1"
    title: "Good Pattern: Recommended Approach"
    purpose: "Show best practice"
    complexity: "Intermediate"
    lines_of_code: 20-25
    annotations: false
    runnable: true
    output_shown: false

  - id: "ex-5.4-antipattern1"
    title: "Anti-Pattern: Avoid This"
    purpose: "Show what not to do"
    complexity: "Intermediate"
    lines_of_code: 20-25
    annotations: true
    runnable: true
    output_shown: false
    cross_reference: "ex-5.4-pattern1"

callouts:
  - id: "callout-5.1"
    type: "common_pitfall"
    section: "5.1"
    content: "Watch out for X because it causes Y"

  - id: "callout-5.2"
    type: "best_practice"
    section: "5.2"
    content: "Always do X when working with Y"

  - id: "callout-5.3"
    type: "advanced_topic"
    section: "5.3"
    content: "For those interested, here's the deeper theory..."

  - id: "callout-5.4"
    type: "historical_context"
    section: "5.1"
    content: "This feature was introduced in Python 3.X because..."

exercises:
  - id: "ex-5.1"
    number: 1
    title: "Basic Practice: Writing Your First X"
    difficulty: "Easy"
    type: "Code-writing"
    estimated_time: "10 minutes"

    requirements:
      - "Write a function that does X"
      - "Use Y technique from Section 5.1"
      - "Include error handling"

    test_cases:
      - input: "Input A"
        expected_output: "Output A"

      - input: "Input B"
        expected_output: "Output B"

    starter_code: |
      def function_name(param):
          # Your code here
          pass

    solution_available: true
    hints:
      - "Remember to check for edge case X"
      - "You can use built-in function Y"

  - id: "ex-5.2"
    number: 2
    title: "Code Reading: Analyze This"
    difficulty: "Easy"
    type: "Code-reading"
    estimated_time: "8 minutes"

    code_provided: true
    questions:
      - "What will this code print?"
      - "Why does X happen in line 5?"
      - "What would change if we modified Y?"

    solution_available: true

  - id: "ex-5.3"
    number: 3
    title: "Debugging: Fix the Error"
    difficulty: "Medium"
    type: "Debugging"
    estimated_time: "15 minutes"

    buggy_code_provided: true
    expected_behavior: "Code should do X but produces Y instead"

    tasks:
      - "Identify the bug"
      - "Explain why it happens"
      - "Fix it"

    solution_available: true

  - id: "ex-5.4"
    number: 4
    title: "Refactoring: Improve This Code"
    difficulty: "Medium"
    type: "Refactoring"
    estimated_time: "20 minutes"

    working_code_provided: true
    improvement_goals:
      - "Improve readability"
      - "Follow PEP 8"
      - "Use better variable names"
      - "Add type hints"
      - "Optimize performance"

    solution_available: true

  - id: "ex-5.5"
    number: 5
    title: "Application: Solve Real Problem"
    difficulty: "Medium"
    type: "Application"
    estimated_time: "25 minutes"

    problem_description: |
      Real-world scenario requiring application of chapter concepts

    requirements:
      - "Requirement 1"
      - "Requirement 2"
      - "Requirement 3"

    test_cases:
      - scenario: "Test scenario A"
        expected_behavior: "Expected behavior A"

    solution_available: true

  - id: "ex-5.6"
    number: 6
    title: "Extension: Add Feature"
    difficulty: "Medium"
    type: "Extend-code"
    estimated_time: "20 minutes"

    base_code_provided: true
    extension_requirements:
      - "Add feature X"
      - "Maintain backward compatibility"
      - "Add tests for new feature"

    solution_available: true

  - id: "ex-5.7"
    number: 7
    title: "Comparison: Choose Approach"
    difficulty: "Hard"
    type: "Analysis"
    estimated_time: "30 minutes"

    two_approaches_provided: true
    analysis_questions:
      - "What are the pros and cons of each approach?"
      - "In what scenarios would you use approach A vs. B?"
      - "Which approach has better performance? Why?"
      - "Which is more maintainable? Why?"

    solution_available: true

  - id: "ex-5.8"
    number: 8
    title: "Design Challenge: Build From Scratch"
    difficulty: "Hard"
    type: "Design"
    estimated_time: "45-60 minutes"

    problem_description: |
      Open-ended design problem requiring synthesis of chapter concepts

    requirements:
      - "Functional requirement 1"
      - "Functional requirement 2"
      - "Must demonstrate concept X from section 5.1"
      - "Should follow best practices from section 5.4"

    deliverables:
      - "Working code"
      - "Brief design explanation (comments or docstring)"
      - "Test cases"

    solution_available: true
    multiple_valid_solutions: true

---

# Cross-References

internal_references:
  forward:
    - target_chapter: "ch-08"
      context: "We'll explore X in more depth in Chapter 8"
      section: "5.3"

    - target_chapter: "ch-10"
      context: "For advanced use cases, see Chapter 10"
      section: "5.4"

  backward:
    - source_chapter: "ch-03"
      context: "Recall from Chapter 3 that functions..."
      section: "5.1"

    - source_chapter: "ch-04"
      context: "We introduced Y in Chapter 4. Here we'll extend it."
      section: "5.2"

  lateral:
    - related_chapter: "ch-07"
      relationship: "Alternative approach"
      context: "For a different technique, see Chapter 7"
      section: "5.2"

external_references:
  - resource: "Python PEP 8"
    url: "https://pep8.org"
    section: "5.4"

  - resource: "Python Documentation: functools"
    url: "https://docs.python.org/3/library/functools.html"
    section: "5.3"

---

# Design Notes

chapter_design_decisions:
  structure_rationale: "Why we chose this chapter structure"
  # e.g., "MCA pattern because motivation is crucial for this advanced topic"

  section_ordering: "Why sections are ordered this way"
  # e.g., "Basic → Practical → Advanced to scaffold complexity"

  example_selection: "How we chose code examples"
  # e.g., "Examples progress from toy problems to realistic scenarios"

  exercise_design: "Exercise difficulty and type rationale"
  # e.g., "Mix of code-writing, reading, debugging to build multiple skills"

cognitive_load_management:
  new_concepts_count: 3
  # Number of major new concepts introduced

  concept_density: "Medium"
  # Low (1-2 concepts) | Medium (3-5) | High (6+)

  prerequisite_load: "Light"
  # Light | Medium | Heavy

  expected_reading_time: "2-3 hours"
  expected_practice_time: "3-4 hours"
  # Time for exercises and experimentation

revision_history:
  - version: "1.0"
    date: "2025-01-15"
    changes: "Initial chapter structure"

  - version: "1.1"
    date: "2025-01-20"
    changes: "Added exercise 5.8, reorganized section 5.3"
